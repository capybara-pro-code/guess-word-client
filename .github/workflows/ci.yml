name: 'CI'

concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true
  
permissions:
  packages: write

on:
  pull_request:
    types: [ labeled, opened, synchronize, reopened ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  DOTNET_NOLOGO: true
  NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

jobs:
  labels:
    name: Label taking off
    if: github.event.label.name == 'publish'
    runs-on: ubuntu-latest
    steps:
      - name: Take off label
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: >
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ github.event.label.name }}'
            })
  
  build:
    name: Build, test and pack
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      
      - name: Get Cache Month
        id: cache-month
        run: |
          echo "date=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT
        shell: bash
      
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ steps.cache-month.outputs.date }}-${{ hashFiles('src/Directory.Packages.props') }}
          restore-keys: |
            nuget-${{ steps.cache-month.outputs.date }}-
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x
            9.x
      
      - name: Restore
        working-directory: ./src
        run: dotnet restore -v normal
      
      - name: Build
        working-directory: ./src
        run: dotnet build -c Release --no-restore -v normal -ds -m
      
      - name: Test
        timeout-minutes: 10
        working-directory: ./src
        run: |
          dotnet test --no-build --framework net8.0 -c Release --logger "console;verbosity=normal" --logger "trx;LogFilePrefix=results" -m
          dotnet test --no-build --framework net9.0 -c Release --logger "console;verbosity=normal" --logger "trx;LogFilePrefix=results" -m
        env:
          RoomsPrefix: "GitHubCi_${{ github.run_id }}"
          GuessWordClient__Username: ${{ vars.GUESSWORD_USERNAME }}
          GuessWordClient__Password: ${{ secrets.GUESSWORD_PASSWORD }}
      
      - name: Upload test results trx files
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results
          path: '**/*.trx'
      
      - name: Pack and publish Release package
        if: github.event_name == 'release'
        working-directory: ./src
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]//v}"
          echo Publish package version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -p:RunNumber=${{ github.run_number }}
          dotnet nuget push "**/bin/Release/*.nupkg" --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --skip-duplicate
          dotnet nuget push "**/bin/Release/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key $NUGET_KEY --skip-duplicate
      
      - name: Pack and publish PR package
        if: github.event.label.name == 'publish'
        working-directory: ./src
        run: |
          VERSION=${{ github.event.number }}.${{ github.run_number }}
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION
          dotnet nuget push "**/bin/Release/*.nupkg" --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --skip-duplicate
